--- a/net/minecraft/server/management/LowerStringMap.java
+++ b/net/minecraft/server/management/LowerStringMap.java
@@ -6,8 +6,8 @@
 import java.util.Set;
 import java.util.Map.Entry;
 
-public class LowerStringMap implements Map {
-    private final Map field_76117_a = new LinkedHashMap();
+public class LowerStringMap<T> implements Map<String, T> {
+    private final Map<String, T> field_76117_a = new LinkedHashMap();
 
     @Override
     public int size() {
@@ -30,22 +30,22 @@
     }
 
     @Override
-    public Object get(Object p_get_1_) {
+    public T get(Object p_get_1_) {
         return this.field_76117_a.get(p_get_1_.toString().toLowerCase());
     }
 
-    public Object put(String p_put_1_, Object p_put_2_) {
+    public T put(String p_put_1_, T p_put_2_) {
         return this.field_76117_a.put(p_put_1_.toLowerCase(), p_put_2_);
     }
 
     @Override
-    public Object remove(Object p_remove_1_) {
+    public T remove(Object p_remove_1_) {
         return this.field_76117_a.remove(p_remove_1_.toString().toLowerCase());
     }
 
     @Override
-    public void putAll(Map p_putAll_1_) {
-        for (Entry entry : p_putAll_1_.entrySet()) {
+    public void putAll(Map<? extends String, ? extends T> p_putAll_1_) {
+        for (Entry<? extends String, ? extends T> entry : p_putAll_1_.entrySet()) {
             this.put((String)entry.getKey(), entry.getValue());
         }
     }
@@ -56,17 +56,17 @@
     }
 
     @Override
-    public Set keySet() {
+    public Set<String> keySet() {
         return this.field_76117_a.keySet();
     }
 
     @Override
-    public Collection values() {
+    public Collection<T> values() {
         return this.field_76117_a.values();
     }
 
     @Override
-    public Set entrySet() {
+    public Set<Map.Entry<String, T>> entrySet() {
         return this.field_76117_a.entrySet();
     }
 }
